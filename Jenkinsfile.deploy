pipeline {
    agent { label 'docker-host' }

    environment {
        K8S_NAMESPACE = 'production'
        // IP Master ‡∏Ç‡∏≠‡∏á Rayong
        MASTER_K8S_IP = '10.10.10.8'
        // üõë PORT NodePort ‡∏ó‡∏µ‡πà Master DB ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å
        MASTER_K8S_PORT = '31006' 
    }

    stages {
        stage('Checkout') {
            steps {
                deleteDir()
                git branch: 'feature/prod',
                    url: 'https://github.com/5000-Bath/project-Devop.git'
            }
        }

        stage('Deploy to Clusters in Parallel') {
            parallel {

                stage('Deploy Rayong (Master)') {
                    steps {
                        script {
                            withCredentials([file(credentialsId: 'kubeconfig-rayong', variable: 'KUBECONFIG_PATH')]) {
                                sh '''
                                    export KUBECONFIG=$KUBECONFIG_PATH
                                    echo "Deploying Master to Rayong..."

                                    # Namespace, PVCs, ConfigMap, Secret, Init SQL
                                    # NOTE: ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå mysql-config-master.yaml ‡∏°‡∏µ bind-address=0.0.0.0
                                    kubectl get ns $K8S_NAMESPACE || kubectl create ns $K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-pvc.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/backend-pvc.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-config-master.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-secret.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-init-master.yaml -n $K8S_NAMESPACE
                                    
                                    # üõë Deployments (‡πÉ‡∏ä‡πâ NodePort)
                                    kubectl apply -f k8s/mysql-master.yaml -n $K8S_NAMESPACE
                                    
                                    # Backend, phpMyAdmin, Frontend (Envsubst)
                                    export DB_HOST_NAME="mysql-rayong"
                                    cat k8s/backend.yaml | envsubst | kubectl apply -f - -n $K8S_NAMESPACE
                                    cat k8s/phpmyadmin.yaml | envsubst | kubectl apply -f - -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/frontend-admin.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/frontend-user.yaml -n $K8S_NAMESPACE

                                    # Rollout check
                                    kubectl rollout status deployment/mysql-rayong -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/backend -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-admin -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-user -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/phpmyadmin -n $K8S_NAMESPACE --timeout=180s
                                    
                                    # üõë ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç User ‡πÉ‡∏ô Runtime: ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏ä‡πâ mysql_native_password
                                    # NOTE: ‡∏ó‡∏≥‡∏ã‡πâ‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤ User ‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏°‡πâ Pod ‡∏à‡∏∞ restart
                                    # NOTE: ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ERROR 2061 (Authentication requires secure connection)
                                    kubectl exec deploy/mysql-rayong -n $K8S_NAMESPACE --container mysql -- \
                                        mysql -h 127.0.0.1 -P 3306 -uroot -p$(kubectl get secret mysql-secret -n $K8S_NAMESPACE -o jsonpath="{.data.MYSQL_ROOT_PASSWORD}" | base64 --decode) -e "
                                            ALTER USER 'repl'@'%' 
                                            IDENTIFIED WITH mysql_native_password BY 'replpassword';
                                            FLUSH PRIVILEGES;
                                        "
                                '''
                            }
                        }
                    }
                }

                stage('Deploy Salaya (Slave)') {
                    steps {
                        script {
                            withCredentials([file(credentialsId: 'kubeconfig-prod', variable: 'KUBECONFIG_PATH')]) {
                                sh '''
                                    export KUBECONFIG=$KUBECONFIG_PATH
                                    echo "Deploying Slave to Salaya..."

                                    # Namespace, PVCs, ConfigMap, Secret
                                    kubectl get ns $K8S_NAMESPACE || kubectl create ns $K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-pvc.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/backend-pvc.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-config-slave.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-secret.yaml -n $K8S_NAMESPACE

                                    # Deployments
                                    kubectl apply -f k8s/mysql-slave.yaml -n $K8S_NAMESPACE

                                    # Backend, phpMyAdmin, Frontend (Envsubst)
                                    export DB_HOST_NAME="mysql-salaya"
                                    cat k8s/backend.yaml | envsubst | kubectl apply -f - -n $K8S_NAMESPACE
                                    cat k8s/phpmyadmin.yaml | envsubst | kubectl apply -f - -n $K8S_NAMESPACE

                                    kubectl apply -f k8s/frontend-admin.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/frontend-user.yaml -n $K8S_NAMESPACE

                                    # Rollout check
                                    kubectl rollout status deployment/mysql-salaya -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/backend -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-admin -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-user -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/phpmyadmin -n $K8S_NAMESPACE --timeout=180s

                                    # Set up replication
                                    MASTER_HOST="$MASTER_K8S_IP" 
                                    MASTER_PORT="$MASTER_K8S_PORT"
                                    
                                    MYSQL_ROOT_PASSWORD=$(kubectl get secret mysql-secret -n $K8S_NAMESPACE -o jsonpath="{.data.MYSQL_ROOT_PASSWORD}" | base64 --decode)

                                    # ‡πÄ‡∏û‡∏¥‡πà‡∏° Delay 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ MySQL Server ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
                                    echo "Waiting 30 seconds for MySQL Slave to fully initialize..."
                                    sleep 30 

                                    # üõë Final Replication Command: ‡πÉ‡∏ä‡πâ MASTER_PORT ‡πÅ‡∏•‡∏∞ RESET REPLICA
                                    kubectl exec deploy/mysql-salaya -n $K8S_NAMESPACE --container mysql -- \
                                        mysql -h 127.0.0.1 -P 3306 -uroot -p$MYSQL_ROOT_PASSWORD -e "
                                            STOP REPLICA; 
                                            RESET REPLICA; 
                                            CHANGE MASTER TO
                                              MASTER_HOST='$MASTER_HOST',
                                              MASTER_PORT=$MASTER_PORT,
                                              MASTER_USER='repl',
                                              MASTER_PASSWORD='replpassword',
                                              MASTER_AUTO_POSITION=1;
                                            START REPLICA;"
                                '''
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo "‚úÖ Deployment finished for all clusters"
        }
    }
}
