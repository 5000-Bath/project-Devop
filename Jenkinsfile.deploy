pipeline {
    agent { label 'docker-host' } // agent ที่มี kubectl
    environment {
        K8S_NAMESPACE = 'production'
    }
    stages {
        stage('Checkout') {
            steps {
                deleteDir()
                git branch: 'changename',
                    url: 'https://github.com/5000-Bath/project-Devop.git'
            }
        }

        stage('Install kubectl') {
            steps {
                sh '''
                if ! command -v kubectl &> /dev/null
                then
                    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
                    chmod +x kubectl
                    sudo mv kubectl /usr/local/bin/kubectl
                fi
                kubectl version --client
                '''
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig-prod', variable: 'KUBECONFIG_PATH')]) {
                    sh '''
                    export KUBECONFIG=$KUBECONFIG_PATH
                    kubectl get ns || kubectl create ns $K8S_NAMESPACE
                    kubectl apply -f k8s/ -n $K8S_NAMESPACE
                    kubectl rollout status deployment/backend -n $K8S_NAMESPACE
                    kubectl rollout status deployment/frontend-user -n $K8S_NAMESPACE
                    kubectl rollout status deployment/frontend-admin -n $K8S_NAMESPACE
                    kubectl rollout status deployment/phpmyadmin -n $K8S_NAMESPACE
                    kubectl rollout status deployment/mysql -n $K8S_NAMESPACE
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Deployment stage finished'
        }
    }
}
