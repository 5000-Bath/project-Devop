pipeline {
    agent { label 'docker-host' }

    environment {
        K8S_NAMESPACE = 'production'
    }

    stages {
        stage('Checkout') {
            steps {
                deleteDir()
                git branch: 'feature/prod',
                    url: 'https://github.com/5000-Bath/project-Devop.git'
            }
        }

        stage('Deploy to Clusters in Parallel') {
            parallel {
                stage('Deploy Rayong (Master)') {
                    steps {
                        script {
                            withCredentials([file(credentialsId: 'kubeconfig-rayong', variable: 'KUBECONFIG_PATH')]) {
                                sh """
                                    export KUBECONFIG=\$KUBECONFIG_PATH
                                    echo "Deploying to Rayong cluster (Master)..."
                                    kubectl get ns \$K8S_NAMESPACE || kubectl create ns \$K8S_NAMESPACE

                                    # Apply PV/PVC
                                    kubectl apply -f k8s/mysql-pv.yaml -n \$K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-pvc.yaml -n \$K8S_NAMESPACE

                                    # Apply Master deployment
                                    kubectl apply -f k8s/mysql-master.yaml -n \$K8S_NAMESPACE

                                    # Rollout check
                                    kubectl rollout status deployment/mysql-rayong -n \$K8S_NAMESPACE --timeout=180s
                                """
                            }
                        }
                    }
                }

                stage('Deploy Salaya (Slave)') {
                    steps {
                        script {
                            withCredentials([file(credentialsId: 'kubeconfig-prod', variable: 'KUBECONFIG_PATH')]) {
                                sh """
                                    export KUBECONFIG=\$KUBECONFIG_PATH
                                    echo "Deploying to Salaya cluster (Slave)..."
                                    kubectl get ns \$K8S_NAMESPACE || kubectl create ns \$K8S_NAMESPACE

                                    # Apply PV/PVC
                                    kubectl apply -f k8s/mysql-pv.yaml -n \$K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-pvc.yaml -n \$K8S_NAMESPACE

                                    # Apply Slave deployment
                                    kubectl apply -f k8s/mysql-slave.yaml -n \$K8S_NAMESPACE

                                    # Rollout check
                                    kubectl rollout status deployment/mysql-salaya -n \$K8S_NAMESPACE --timeout=180s
                                """
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo "âœ… Deployment finished for all clusters"
        }
    }
}
