pipeline {
    agent { label 'docker-host' }

    parameters {
        string(name: 'IMAGE_VERSION', defaultValue: '1.0.0', description: 'Version of Docker images to deploy')
    }

    environment {
        K8S_NAMESPACE = 'production'
        IMAGE_VERSION = "${params.IMAGE_VERSION}"
    }

    stages {
        stage('Checkout') {
            steps {
                deleteDir()
                git branch: 'main',
                    url: 'https://github.com/5000-Bath/project-Devop.git'
            }
        }

        stage('Deploy to Clusters in Parallel') {
            parallel {

                stage('Deploy Rayong (Master)') {
                    steps {
                        script {
                            withCredentials([file(credentialsId: 'kubeconfig-rayong', variable: 'KUBECONFIG_PATH')]) {
                                sh """
                                    export KUBECONFIG=\$KUBECONFIG_PATH
                                    export DB_HOST_NAME="mysql-rayong"
                                    echo "ðŸš€ Deploying Master to Rayong..."

                                    kubectl get ns \$K8S_NAMESPACE || kubectl create ns \$K8S_NAMESPACE

                                    # --- MySQL Master ---
                                    kubectl apply -f k8s/mysql-config-master.yaml -n \$K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-secret.yaml -n \$K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-init-master.yaml -n \$K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-master.yaml -n \$K8S_NAMESPACE

                                    # --- Backend ---
                                    envsubst < k8s/backend.yaml | kubectl apply -f - -n \$K8S_NAMESPACE

                                    # --- Frontend ConfigMaps ---
                                    kubectl create configmap nginx-conf-user-rayong \
                                        --from-file=default.conf=Foodstore_User/nginx-rayong.conf \
                                        -n \$K8S_NAMESPACE --dry-run=client -o yaml | kubectl apply -f -
                                    
                                    kubectl create configmap nginx-conf-admin-rayong \
                                        --from-file=default.conf=Foodstore_admin_Frontend/nginx-rayong.conf \
                                        -n \$K8S_NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

                                    # --- Frontend Deploy ---
                                    envsubst < k8s/frontend-user-rayong.yaml | kubectl apply -f - -n \$K8S_NAMESPACE
                                    envsubst < k8s/frontend-admin-rayong.yaml | kubectl apply -f - -n \$K8S_NAMESPACE

                                    # --- Rollout check ---
                                    kubectl rollout status deployment/mysql-rayong -n \$K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/backend -n \$K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-admin -n \$K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-user -n \$K8S_NAMESPACE --timeout=180s

                                    # --- Restart deployments ---
                                    kubectl rollout restart deployment/backend -n \$K8S_NAMESPACE
                                    kubectl rollout restart deployment/frontend-admin -n \$K8S_NAMESPACE
                                    kubectl rollout restart deployment/frontend-user -n \$K8S_NAMESPACE
                                """
                            }
                        }
                    }
                }

                stage('Deploy Salaya (Slave)') {
                    steps {
                        script {
                            withCredentials([file(credentialsId: 'kubeconfig-prod', variable: 'KUBECONFIG_PATH')]) {
                                sh """
                                    export KUBECONFIG=\$KUBECONFIG_PATH
                                    export DB_HOST_NAME="mysql-salaya"
                                    echo "ðŸš€ Deploying Slave to Salaya..."

                                    kubectl get ns \$K8S_NAMESPACE || kubectl create ns \$K8S_NAMESPACE

                                    # --- PVC ---
                                    kubectl apply -f k8s/mysql-pvc.yaml -n \$K8S_NAMESPACE
                                    kubectl apply -f k8s/backend-pvc.yaml -n \$K8S_NAMESPACE
                                    kubectl apply -f k8s/backend-pvc-claim.yaml -n \$K8S_NAMESPACE

                                    # --- MySQL Slave ---
                                    kubectl apply -f k8s/mysql-config-slave.yaml -n \$K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-secret.yaml -n \$K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-slave.yaml -n \$K8S_NAMESPACE

                                    # --- Backend ---
                                    envsubst < k8s/backend.yaml | kubectl apply -f - -n \$K8S_NAMESPACE

                                    # --- Frontend ConfigMaps ---
                                    kubectl create configmap nginx-conf-user-salaya \
                                        --from-file=default.conf=Foodstore_User/nginx-salaya.conf \
                                        -n \$K8S_NAMESPACE --dry-run=client -o yaml | kubectl apply -f -
                                    
                                    kubectl create configmap nginx-conf-admin-salaya \
                                        --from-file=default.conf=Foodstore_admin_Frontend/nginx-salaya.conf \
                                        -n \$K8S_NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

                                    # --- Frontend Deploy ---
                                    envsubst < k8s/frontend-user-salaya.yaml | kubectl apply -f - -n \$K8S_NAMESPACE
                                    envsubst < k8s/frontend-admin-salaya.yaml | kubectl apply -f - -n \$K8S_NAMESPACE

                                    # --- Rollout check ---
                                    kubectl rollout status deployment/backend -n \$K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-admin -n \$K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-user -n \$K8S_NAMESPACE --timeout=180s

                                    # --- Restart deployments ---
                                    kubectl rollout restart deployment/backend -n \$K8S_NAMESPACE
                                    kubectl rollout restart deployment/frontend-admin -n \$K8S_NAMESPACE
                                    kubectl rollout restart deployment/frontend-user -n \$K8S_NAMESPACE
                                """
                            }
                        }
                    }
                }

            }
        }
    }

    post {
        always {
            echo "âœ… Deployment finished for all clusters"
        }
    }
}
