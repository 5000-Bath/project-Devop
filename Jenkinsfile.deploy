pipeline {
    agent { label 'docker-host' }

    environment {
        K8S_NAMESPACE = 'production'
        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Master IP Address ‡∏Ç‡∏≠‡∏á Rayong ‡πÑ‡∏ß‡πâ‡πÄ‡∏õ‡πá‡∏ô Environment Variable
        MASTER_K8S_IP = '10.10.10.8' 
    }

    stages {
        stage('Checkout') {
            steps {
                deleteDir()
                git branch: 'feature/prod',
                    url: 'https://github.com/5000-Bath/project-Devop.git'
            }
        }

        stage('Deploy to Clusters in Parallel') {
            parallel {

                stage('Deploy Rayong (Master)') {
                    steps {
                        script {
                            withCredentials([file(credentialsId: 'kubeconfig-rayong', variable: 'KUBECONFIG_PATH')]) {
                                sh '''
                                    export KUBECONFIG=$KUBECONFIG_PATH
                                    echo "Deploying Master to Rayong..."

                                    # Namespace
                                    kubectl get ns $K8S_NAMESPACE || kubectl create ns $K8S_NAMESPACE

                                    # PVCs
                                    kubectl apply -f k8s/mysql-pvc.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/backend-pvc.yaml -n $K8S_NAMESPACE

                                    # ConfigMap + Secret
                                    kubectl apply -f k8s/mysql-config-master.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-secret.yaml -n $K8S_NAMESPACE

                                    # Init SQL
                                    kubectl apply -f k8s/mysql-init-master.yaml -n $K8S_NAMESPACE

                                    # Deployments
                                    kubectl apply -f k8s/mysql-master.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/backend.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/frontend-admin.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/frontend-user.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/phpmyadmin.yaml -n $K8S_NAMESPACE

                                    # Rollout check
                                    kubectl rollout status deployment/mysql-rayong -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/backend -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-admin -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-user -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/phpmyadmin -n $K8S_NAMESPACE --timeout=180s
                                '''
                            }
                        }
                    }
                }

                stage('Deploy Salaya (Slave)') {
                    steps {
                        script {
                            withCredentials([file(credentialsId: 'kubeconfig-prod', variable: 'KUBECONFIG_PATH')]) {
                                sh '''
                                    export KUBECONFIG=$KUBECONFIG_PATH
                                    echo "Deploying Slave to Salaya..."

                                    # Namespace
                                    kubectl get ns $K8S_NAMESPACE || kubectl create ns $K8S_NAMESPACE

                                    # PVCs
                                    kubectl apply -f k8s/mysql-pvc.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/backend-pvc.yaml -n $K8S_NAMESPACE

                                    # ConfigMap + Secret
                                    kubectl apply -f k8s/mysql-config-slave.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/mysql-secret.yaml -n $K8S_NAMESPACE

                                    # Deployments
                                    kubectl apply -f k8s/mysql-slave.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/backend.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/frontend-admin.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/frontend-user.yaml -n $K8S_NAMESPACE
                                    kubectl apply -f k8s/phpmyadmin.yaml -n $K8S_NAMESPACE

                                    # Rollout check
                                    kubectl rollout status deployment/mysql-salaya -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/backend -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-admin -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/frontend-user -n $K8S_NAMESPACE --timeout=180s
                                    kubectl rollout status deployment/phpmyadmin -n $K8S_NAMESPACE --timeout=180s

                                    # Set up replication
                                    # üõë ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÉ‡∏ä‡πâ IP Master (Rayong) ‡∏ú‡πà‡∏≤‡∏ô VPN ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
                                    MASTER_HOST="$MASTER_K8S_IP" 
                                    
                                    # ‡∏î‡∏∂‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å Secret ‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå Salaya
                                    MYSQL_ROOT_PASSWORD=$(kubectl get secret mysql-secret -n $K8S_NAMESPACE -o jsonpath="{.data.MYSQL_ROOT_PASSWORD}" | base64 --decode)

                                    # ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Replication ‡∏ö‡∏ô Slave Pod
                                    kubectl exec deploy/mysql-salaya -n $K8S_NAMESPACE -- \
                                        mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "
                                            CHANGE MASTER TO
                                              MASTER_HOST='$MASTER_HOST',
                                              MASTER_USER='repl',
                                              MASTER_PASSWORD='replpassword',
                                              MASTER_AUTO_POSITION=1;
                                            START SLAVE;"
                                '''
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo "‚úÖ Deployment finished for all clusters"
        }
    }
}
